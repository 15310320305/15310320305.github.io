<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>应祥的博客</title>
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2017-08-29T09:31:14.759Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>CoderDreamer</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>HDU6070(分数规划+线段树)</title>
    <link href="http://yoursite.com/2017/08/29/HDU6070%EF%BC%88%E5%88%86%E6%95%B0%E8%A7%84%E5%88%92+%E7%BA%BF%E6%AE%B5%E6%A0%91%EF%BC%89/"/>
    <id>http://yoursite.com/2017/08/29/HDU6070（分数规划+线段树）/</id>
    <published>2017-08-29T08:42:09.607Z</published>
    <updated>2017-08-29T09:31:14.759Z</updated>
    
    <content type="html"><![CDATA[<h2 id="题目链接：HDU6070"><a href="#题目链接：HDU6070" class="headerlink" title="题目链接：HDU6070"></a>题目链接：<a href="http://acm.hdu.edu.cn/showproblem.php?pid=6070" target="_blank" rel="external">HDU6070</a></h2><hr>
<h2 id="题目大意："><a href="#题目大意：" class="headerlink" title="题目大意："></a>题目大意：</h2><pre><code>给你长度为n的序列，求某个区间[l,r]使得区间内的数字种类/区间长度最小
输出这个最小值
</code></pre><ul>
<li><a id="more"></a>
<the rest="" of="" contents="" |="" 余下全文="">

</the></li>
</ul>
<hr>
<h2 id="题目思路："><a href="#题目思路：" class="headerlink" title="题目思路："></a>题目思路：</h2><pre><code>对于这种区间最优比率问题（分数规划问题）我们常规的解法是二分答案来求
根据题目意思我们二分答案后可以转化成
size(l,r)/(r-l+1)&lt;=mid   -&gt;   size(l,r)+l*mid &lt;=(r+1)*mid
这里我们可以枚举右边的r ，然后用最值线段树来维护左边的最小值，  
我们build的时候将线段树初始化为l*mid,然后对于枚举i,a[i]的贡献区间为
[pre[a[i]]+1,i]+1 因为如果前面已经存在了a[i]，该数就对之前的区间
没有贡献了
</code></pre><hr>
<h2 id="AC代码："><a href="#AC代码：" class="headerlink" title="AC代码："></a>AC代码：</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div><div class="line">96</div><div class="line">97</div><div class="line">98</div><div class="line">99</div><div class="line">100</div><div class="line">101</div><div class="line">102</div><div class="line">103</div><div class="line">104</div><div class="line">105</div><div class="line">106</div><div class="line">107</div><div class="line">108</div><div class="line">109</div><div class="line">110</div></pre></td><td class="code"><pre><div class="line">#include&lt;bits/stdc++.h&gt;</div><div class="line">const int maxn = 6e4+50;</div><div class="line">const double esp = 1e-5;</div><div class="line">using namespace std;</div><div class="line">int a[maxn],last[maxn],pre[maxn],n;</div><div class="line">double tree[maxn&lt;&lt;2],c[maxn&lt;&lt;2];</div><div class="line">void pushup(int rt)&#123;tree[rt] = min(tree[rt&lt;&lt;1],tree[rt&lt;&lt;1|1]);&#125;</div><div class="line">void pushdown(int rt)</div><div class="line">&#123;</div><div class="line">    if(c[rt]&gt;0)</div><div class="line">    &#123;</div><div class="line">        c[rt&lt;&lt;1]+=c[rt];</div><div class="line">        c[rt&lt;&lt;1|1]+=c[rt];</div><div class="line">        tree[rt&lt;&lt;1]+=c[rt];</div><div class="line">        tree[rt&lt;&lt;1|1]+=c[rt];</div><div class="line">        c[rt] = 0;</div><div class="line">    &#125;</div><div class="line">&#125;</div><div class="line">void Build(int l,int r,int rt,double mid)</div><div class="line">&#123;</div><div class="line">    c[rt] =0;</div><div class="line">    if(l==r)</div><div class="line">    &#123;</div><div class="line">        tree[rt] = mid*l*1.0;</div><div class="line">        return ;</div><div class="line">    &#125;</div><div class="line">    int Mid = (l+r)&gt;&gt;1;</div><div class="line">    Build(l,Mid,rt&lt;&lt;1,mid);</div><div class="line">    Build(Mid+1,r,rt&lt;&lt;1|1,mid);</div><div class="line">    pushup(rt);</div><div class="line">&#125;</div><div class="line"></div><div class="line">void updata(int l,int r,int rt,int L,int R,double x)</div><div class="line">&#123;</div><div class="line">    if(L&lt;=l&amp;&amp;r&lt;=R)</div><div class="line">    &#123;</div><div class="line">        tree[rt]+=x;</div><div class="line">        c[rt]+=x;</div><div class="line">        return ;</div><div class="line">    &#125;</div><div class="line">    pushdown(rt);</div><div class="line">    int mid = (l+r)&gt;&gt;1;</div><div class="line">    if(L&lt;=mid)</div><div class="line">    &#123;</div><div class="line">        updata(l,mid,rt&lt;&lt;1,L,R,x);</div><div class="line">    &#125;</div><div class="line">    if(R&gt;mid)</div><div class="line">    &#123;</div><div class="line">        updata(mid+1,r,rt&lt;&lt;1|1,L,R,x);</div><div class="line">    &#125;</div><div class="line">    pushup(rt);</div><div class="line">&#125;</div><div class="line">double quary(int l,int r,int rt,int L,int R)</div><div class="line">&#123;</div><div class="line">    if(L&lt;=l&amp;&amp;r&lt;=R)</div><div class="line">    &#123;</div><div class="line">        return tree[rt];</div><div class="line">    &#125;</div><div class="line">    pushdown(rt);</div><div class="line">    int mid = (l+r)&gt;&gt;1;</div><div class="line">    double res = 1e9;</div><div class="line">    if(L&lt;=mid)</div><div class="line">    &#123;</div><div class="line">        res = min(res,quary(l,mid,rt&lt;&lt;1,L,R));</div><div class="line">    &#125;</div><div class="line">    if(R&gt;mid)</div><div class="line">    &#123;</div><div class="line">        res = min(res,quary(mid+1,r,rt&lt;&lt;1|1,L,R));</div><div class="line">    &#125;</div><div class="line">    return res;</div><div class="line">&#125;</div><div class="line">bool check(double mid)</div><div class="line">&#123;</div><div class="line">    Build(1,n,1,mid);</div><div class="line">    for(int i=1;i&lt;=n;i++)</div><div class="line">    &#123;</div><div class="line">        updata(1,n,1,pre[i]+1,i,1.0);</div><div class="line">        if(quary(1,n,1,1,i)&lt;=mid*(i+1.0))return true;</div><div class="line">    &#125;</div><div class="line">    return false;</div><div class="line">&#125;</div><div class="line"></div><div class="line">int main()</div><div class="line">&#123;</div><div class="line">    int t;cin&gt;&gt;t;</div><div class="line">    while(t--)</div><div class="line">    &#123;</div><div class="line">        scanf(&quot;%d&quot;,&amp;n);</div><div class="line">        memset(last,0,sizeof(last));</div><div class="line">        for(int i=1;i&lt;=n;i++)</div><div class="line">        &#123;</div><div class="line">            scanf(&quot;%d&quot;,&amp;a[i]);</div><div class="line">            if(last[a[i]])</div><div class="line">            &#123;</div><div class="line">                pre[i] = last[a[i]];</div><div class="line">            &#125;</div><div class="line">            else pre[i] = 0;</div><div class="line">            last[a[i]] = i;</div><div class="line">        &#125;</div><div class="line">        double l = 0,r = 1.0,mid,ans;</div><div class="line">        while(r-l&gt;esp)</div><div class="line">        &#123;</div><div class="line">            mid = (l+r)/2.0;</div><div class="line">            if(check(mid))r = (ans=mid)-esp;</div><div class="line">            else l = mid+esp;</div><div class="line">        &#125;</div><div class="line">        printf(&quot;%lf\n&quot;,ans);</div><div class="line">    &#125;</div><div class="line">    return 0;</div><div class="line">&#125;</div></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;题目链接：HDU6070&quot;&gt;&lt;a href=&quot;#题目链接：HDU6070&quot; class=&quot;headerlink&quot; title=&quot;题目链接：HDU6070&quot;&gt;&lt;/a&gt;题目链接：&lt;a href=&quot;http://acm.hdu.edu.cn/showproblem.php?pid=6070&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;HDU6070&lt;/a&gt;&lt;/h2&gt;&lt;hr&gt;
&lt;h2 id=&quot;题目大意：&quot;&gt;&lt;a href=&quot;#题目大意：&quot; class=&quot;headerlink&quot; title=&quot;题目大意：&quot;&gt;&lt;/a&gt;题目大意：&lt;/h2&gt;&lt;pre&gt;&lt;code&gt;给你长度为n的序列，求某个区间[l,r]使得区间内的数字种类/区间长度最小
输出这个最小值
&lt;/code&gt;&lt;/pre&gt;&lt;ul&gt;
&lt;li&gt;
    
    </summary>
    
    
      <category term="hdu" scheme="http://yoursite.com/tags/hdu/"/>
    
      <category term="线段树" scheme="http://yoursite.com/tags/%E7%BA%BF%E6%AE%B5%E6%A0%91/"/>
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="http://yoursite.com/2017/08/28/hello-world/"/>
    <id>http://yoursite.com/2017/08/28/hello-world/</id>
    <published>2017-08-28T03:38:07.915Z</published>
    <updated>2017-08-29T09:27:09.689Z</updated>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="external">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="external">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="external">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="external">GitHub</a>.</p>
<ul>
<li><a id="more"></a>
<the rest="" of="" contents="" |="" 余下全文="">

</the></li>
</ul>
<h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo new <span class="string">"My New Post"</span></div></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="external">Writing</a></p>
<h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo server</div></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="external">Server</a></p>
<h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo generate</div></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="external">Generating</a></p>
<h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo deploy</div></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/deployment.html" target="_blank" rel="external">Deployment</a></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.io/docs/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;documentation&lt;/a&gt; for more info. If you get any problems when using Hexo, you can find the answer in &lt;a href=&quot;https://hexo.io/docs/troubleshooting.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;troubleshooting&lt;/a&gt; or you can ask me on &lt;a href=&quot;https://github.com/hexojs/hexo/issues&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;GitHub&lt;/a&gt;.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
    
    </summary>
    
    
  </entry>
  
</feed>
